{"title":"parseInt研究笔记","date":"2020-02-24T07:38:17.000Z","date_formatted":{"ll":"Feb 24, 2020","L":"02/24/2020","MM-DD":"02-24"},"thumbnail":"https://s2.ax1x.com/2020/02/24/38gJeK.jpg","link":"2020/02/24/parseInt研究笔记","tags":["JavaScript"],"updated":"2020-02-24T08:40:49.719Z","content":"<p><a href=\"https://imgchr.com/i/3MjevF\" target=\"_blank\"><img src=\"https://s2.ax1x.com/2020/02/22/3MjevF.png\" alt=\"parseInt\"></a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">parseInt(&quot;10&quot;);\t\t\t&#x2F;&#x2F;返回 10</span><br><span class=\"line\">parseInt(&quot;19&quot;,10);\t\t&#x2F;&#x2F;返回 19 (10+9)</span><br><span class=\"line\">parseInt(&quot;11&quot;,2);\t\t&#x2F;&#x2F;返回 3 (2+1)</span><br><span class=\"line\">parseInt(&quot;17&quot;,8);\t\t&#x2F;&#x2F;返回 15 (8+7)</span><br><span class=\"line\">parseInt(&quot;1f&quot;,16);\t\t&#x2F;&#x2F;返回 31 (16+15)</span><br><span class=\"line\">parseInt(&quot;010&quot;);\t\t&#x2F;&#x2F;未定：返回 10 或 8</span><br></pre></td></tr></table></figure>\n<h3 id=\"上面的运算过程\">上面的运算过程<a href=\"#上面的运算过程\" title=\"上面的运算过程\"></a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 9 9 (此行为字符串)</span><br><span class=\"line\">-----</span><br><span class=\"line\">2 1 0 (此行为基数的幂)</span><br></pre></td></tr></table></figure>\n<ol><li><code>parseInt(&quot;19&quot;,10)</code><br>等于<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 9 (此行为字符串)</span><br><span class=\"line\">-----</span><br><span class=\"line\">1 0 (此行为基数的幂)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 * 10^1 + 9 * 10 ^0 &#x3D; 19</span><br></pre></td></tr></table></figure></li>\n<li><code>parseInt(&quot;11&quot;,2)</code><br>等于<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 * 2^1 + 1 * 2^0 &#x3D; 3</span><br></pre></td></tr></table></figure></li>\n<li><code>parseInt(&quot;1f&quot;,16)</code><br>等于<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 * 16^1 + 15 * 16^0 &#x3D; 31</span><br></pre></td></tr></table></figure>\n<h4 id=\"说明\">说明<a href=\"#说明\" title=\"说明\"></a></h4><blockquote>\n<p>123456789, 数字9后面的数字以字母表示，<br>即 a 代表了 10，<br>b 代表了 11, 以此类推</p>\n</blockquote>\n</li>\n</ol><blockquote>\n<p>当基数为0或没有设置时，将以字符串开头来定义基数</p>\n<ol><li><p>如果 string 以 “0x” 开头，parseInt() 会把 string 的其余部分解析为十六进制的整数</p>\n</li>\n<li><p>如果 string 以 0 开头，那么 ECMAScript v3 允许 parseInt() 的一个实现把其后的字符解析为八进制或十六进制的数字</p>\n</li>\n<li><p>如果 string 以 1 ~ 9 的数字开头，parseInt() 将把它解析为十进制的整数</p>\n</li>\n</ol></blockquote>\n<h3 id=\"补充规则\">补充规则:<a href=\"#补充规则\" title=\"补充规则:\"></a></h3><p>只计算字符串里小于基数的字符, 大于基数的字符将过滤掉</p>\n<p>举例:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">parseInt(17,6) &#x3D;&gt; parseInt(&quot;1&quot;,6) &#x2F;&#x2F; 1</span><br></pre></td></tr></table></figure>\n<h4 id=\"转换步骤\">转换步骤<a href=\"#转换步骤\" title=\"转换步骤\"></a></h4><ol><li>数字17不是字符串，所以将隐式转换为”17”</li>\n<li>字符串”17”拆分为 “1”和”7”</li>\n<li>由于”7”是大于基数6，所以”7”不在6进制范围内，即过滤掉”7”</li>\n<li>最终只剩下<code>parseInt(&quot;1&quot;,6)</code>进行计算<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 * 6^0 &#x3D; 1</span><br></pre></td></tr></table></figure>\n<h3 id=\"返回nan的规则\">返回NaN的规则:<a href=\"#返回nan的规则\" title=\"返回NaN的规则:\"></a></h3></li>\n<li>字符串是非数字开头，将返回NaN,如<code>parseInt(&quot;hello123&quot;)</code></li>\n<li>字符串的里的任意字符均不在基数的进制范围，将返回NaN, 如<code>parseInt(&quot;3&quot;,2)</code></li>\n<li>基数不在2~36范围，且不等于0的，也返回NaN</li>\n</ol>","next":{"title":"面试集(持续更新)","link":"2020/02/23/面试集"},"plink":"https://afternoonteacat.github.io/2020/02/24/parseInt研究笔记/","copyright":{"author":"afternoonTeaCAT","link":"<a href=\"https://afternoonteacat.github.io/2020/02/24/parseInt研究笔记/\" title=\"parseInt研究笔记\">https://afternoonteacat.github.io/2020/02/24/parseInt研究笔记/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}